#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqIt.UmbracoServices.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StandardSite.Umbraco")]
	public partial class UmbracoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertcmsContent(cmsContent instance);
    partial void UpdatecmsContent(cmsContent instance);
    partial void DeletecmsContent(cmsContent instance);
    partial void InsertcmsContentXml(cmsContentXml instance);
    partial void UpdatecmsContentXml(cmsContentXml instance);
    partial void DeletecmsContentXml(cmsContentXml instance);
    partial void InsertcmsPropertyData(cmsPropertyData instance);
    partial void UpdatecmsPropertyData(cmsPropertyData instance);
    partial void DeletecmsPropertyData(cmsPropertyData instance);
    #endregion
		
		public UmbracoDataContext() : 
				base(global::LinqIt.UmbracoServices.Properties.Settings.Default.StandardSite_UmbracoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UmbracoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UmbracoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UmbracoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UmbracoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<cmsContent> cmsContents
		{
			get
			{
				return this.GetTable<cmsContent>();
			}
		}
		
		public System.Data.Linq.Table<cmsContentXml> cmsContentXmls
		{
			get
			{
				return this.GetTable<cmsContentXml>();
			}
		}
		
		public System.Data.Linq.Table<cmsPropertyData> cmsPropertyDatas
		{
			get
			{
				return this.GetTable<cmsPropertyData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cmsContent")]
	public partial class cmsContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pk;
		
		private int _nodeId;
		
		private int _contentType;
		
		private EntityRef<cmsContentXml> _cmsContentXml;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpkChanging(int value);
    partial void OnpkChanged();
    partial void OnnodeIdChanging(int value);
    partial void OnnodeIdChanged();
    partial void OncontentTypeChanging(int value);
    partial void OncontentTypeChanged();
    #endregion
		
		public cmsContent()
		{
			this._cmsContentXml = default(EntityRef<cmsContentXml>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pk
		{
			get
			{
				return this._pk;
			}
			set
			{
				if ((this._pk != value))
				{
					this.OnpkChanging(value);
					this.SendPropertyChanging();
					this._pk = value;
					this.SendPropertyChanged("pk");
					this.OnpkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeId", DbType="Int NOT NULL")]
		public int nodeId
		{
			get
			{
				return this._nodeId;
			}
			set
			{
				if ((this._nodeId != value))
				{
					this.OnnodeIdChanging(value);
					this.SendPropertyChanging();
					this._nodeId = value;
					this.SendPropertyChanged("nodeId");
					this.OnnodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentType", DbType="Int NOT NULL")]
		public int contentType
		{
			get
			{
				return this._contentType;
			}
			set
			{
				if ((this._contentType != value))
				{
					this.OncontentTypeChanging(value);
					this.SendPropertyChanging();
					this._contentType = value;
					this.SendPropertyChanged("contentType");
					this.OncontentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cmsContent_cmsContentXml", Storage="_cmsContentXml", ThisKey="nodeId", OtherKey="nodeId", IsUnique=true, IsForeignKey=false)]
		public cmsContentXml cmsContentXml
		{
			get
			{
				return this._cmsContentXml.Entity;
			}
			set
			{
				cmsContentXml previousValue = this._cmsContentXml.Entity;
				if (((previousValue != value) 
							|| (this._cmsContentXml.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cmsContentXml.Entity = null;
						previousValue.cmsContent = null;
					}
					this._cmsContentXml.Entity = value;
					if ((value != null))
					{
						value.cmsContent = this;
					}
					this.SendPropertyChanged("cmsContentXml");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cmsContentXml")]
	public partial class cmsContentXml : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _nodeId;
		
		private string _xml;
		
		private EntityRef<cmsContent> _cmsContent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnodeIdChanging(int value);
    partial void OnnodeIdChanged();
    partial void OnxmlChanging(string value);
    partial void OnxmlChanged();
    #endregion
		
		public cmsContentXml()
		{
			this._cmsContent = default(EntityRef<cmsContent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nodeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int nodeId
		{
			get
			{
				return this._nodeId;
			}
			set
			{
				if ((this._nodeId != value))
				{
					if (this._cmsContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnodeIdChanging(value);
					this.SendPropertyChanging();
					this._nodeId = value;
					this.SendPropertyChanged("nodeId");
					this.OnnodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xml", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string xml
		{
			get
			{
				return this._xml;
			}
			set
			{
				if ((this._xml != value))
				{
					this.OnxmlChanging(value);
					this.SendPropertyChanging();
					this._xml = value;
					this.SendPropertyChanged("xml");
					this.OnxmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="cmsContent_cmsContentXml", Storage="_cmsContent", ThisKey="nodeId", OtherKey="nodeId", IsForeignKey=true)]
		public cmsContent cmsContent
		{
			get
			{
				return this._cmsContent.Entity;
			}
			set
			{
				cmsContent previousValue = this._cmsContent.Entity;
				if (((previousValue != value) 
							|| (this._cmsContent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cmsContent.Entity = null;
						previousValue.cmsContentXml = null;
					}
					this._cmsContent.Entity = value;
					if ((value != null))
					{
						value.cmsContentXml = this;
						this._nodeId = value.nodeId;
					}
					else
					{
						this._nodeId = default(int);
					}
					this.SendPropertyChanged("cmsContent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cmsPropertyData")]
	public partial class cmsPropertyData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _contentNodeId;
		
		private System.Nullable<System.Guid> _versionId;
		
		private int _propertytypeid;
		
		private System.Nullable<int> _dataInt;
		
		private System.Nullable<System.DateTime> _dataDate;
		
		private string _dataNvarchar;
		
		private string _dataNtext;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontentNodeIdChanging(int value);
    partial void OncontentNodeIdChanged();
    partial void OnversionIdChanging(System.Nullable<System.Guid> value);
    partial void OnversionIdChanged();
    partial void OnpropertytypeidChanging(int value);
    partial void OnpropertytypeidChanged();
    partial void OndataIntChanging(System.Nullable<int> value);
    partial void OndataIntChanged();
    partial void OndataDateChanging(System.Nullable<System.DateTime> value);
    partial void OndataDateChanged();
    partial void OndataNvarcharChanging(string value);
    partial void OndataNvarcharChanged();
    partial void OndataNtextChanging(string value);
    partial void OndataNtextChanged();
    #endregion
		
		public cmsPropertyData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contentNodeId", DbType="Int NOT NULL")]
		public int contentNodeId
		{
			get
			{
				return this._contentNodeId;
			}
			set
			{
				if ((this._contentNodeId != value))
				{
					this.OncontentNodeIdChanging(value);
					this.SendPropertyChanging();
					this._contentNodeId = value;
					this.SendPropertyChanged("contentNodeId");
					this.OncontentNodeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_versionId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> versionId
		{
			get
			{
				return this._versionId;
			}
			set
			{
				if ((this._versionId != value))
				{
					this.OnversionIdChanging(value);
					this.SendPropertyChanging();
					this._versionId = value;
					this.SendPropertyChanged("versionId");
					this.OnversionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propertytypeid", DbType="Int NOT NULL")]
		public int propertytypeid
		{
			get
			{
				return this._propertytypeid;
			}
			set
			{
				if ((this._propertytypeid != value))
				{
					this.OnpropertytypeidChanging(value);
					this.SendPropertyChanging();
					this._propertytypeid = value;
					this.SendPropertyChanged("propertytypeid");
					this.OnpropertytypeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataInt", DbType="Int")]
		public System.Nullable<int> dataInt
		{
			get
			{
				return this._dataInt;
			}
			set
			{
				if ((this._dataInt != value))
				{
					this.OndataIntChanging(value);
					this.SendPropertyChanging();
					this._dataInt = value;
					this.SendPropertyChanged("dataInt");
					this.OndataIntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dataDate
		{
			get
			{
				return this._dataDate;
			}
			set
			{
				if ((this._dataDate != value))
				{
					this.OndataDateChanging(value);
					this.SendPropertyChanging();
					this._dataDate = value;
					this.SendPropertyChanged("dataDate");
					this.OndataDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNvarchar", DbType="NVarChar(500)")]
		public string dataNvarchar
		{
			get
			{
				return this._dataNvarchar;
			}
			set
			{
				if ((this._dataNvarchar != value))
				{
					this.OndataNvarcharChanging(value);
					this.SendPropertyChanging();
					this._dataNvarchar = value;
					this.SendPropertyChanged("dataNvarchar");
					this.OndataNvarcharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataNtext", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string dataNtext
		{
			get
			{
				return this._dataNtext;
			}
			set
			{
				if ((this._dataNtext != value))
				{
					this.OndataNtextChanging(value);
					this.SendPropertyChanging();
					this._dataNtext = value;
					this.SendPropertyChanged("dataNtext");
					this.OndataNtextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
