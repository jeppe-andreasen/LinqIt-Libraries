#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqIt.Mail.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SikaCaneline.Custom")]
	public partial class HistoryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMailHistory(MailHistory instance);
    partial void UpdateMailHistory(MailHistory instance);
    partial void DeleteMailHistory(MailHistory instance);
    #endregion
		
		public HistoryDataContext() : 
				base(global::LinqIt.Mail.Properties.Settings.Default.wef, mappingSource)
		{
			OnCreated();
		}
		
		public HistoryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HistoryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HistoryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HistoryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MailHistory> MailHistories
		{
			get
			{
				return this.GetTable<MailHistory>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MailHistory")]
	public partial class MailHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreatedOn;
		
		private string _SenderName;
		
		private string _SenderAddress;
		
		private string _Subject;
		
		private string _Recipients;
		
		private string _BccRecipients;
		
		private string _Body;
		
		private bool _Success;
		
		private string _Attachments;
		
		private string _ErrorMessage;
		
		private System.DateTime _LastSendDate;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnSenderNameChanging(string value);
    partial void OnSenderNameChanged();
    partial void OnSenderAddressChanging(string value);
    partial void OnSenderAddressChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnRecipientsChanging(string value);
    partial void OnRecipientsChanged();
    partial void OnBccRecipientsChanging(string value);
    partial void OnBccRecipientsChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnSuccessChanging(bool value);
    partial void OnSuccessChanged();
    partial void OnAttachmentsChanging(string value);
    partial void OnAttachmentsChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnLastSendDateChanging(System.DateTime value);
    partial void OnLastSendDateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public MailHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string SenderName
		{
			get
			{
				return this._SenderName;
			}
			set
			{
				if ((this._SenderName != value))
				{
					this.OnSenderNameChanging(value);
					this.SendPropertyChanging();
					this._SenderName = value;
					this.SendPropertyChanged("SenderName");
					this.OnSenderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderAddress", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string SenderAddress
		{
			get
			{
				return this._SenderAddress;
			}
			set
			{
				if ((this._SenderAddress != value))
				{
					this.OnSenderAddressChanging(value);
					this.SendPropertyChanging();
					this._SenderAddress = value;
					this.SendPropertyChanged("SenderAddress");
					this.OnSenderAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recipients", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Recipients
		{
			get
			{
				return this._Recipients;
			}
			set
			{
				if ((this._Recipients != value))
				{
					this.OnRecipientsChanging(value);
					this.SendPropertyChanging();
					this._Recipients = value;
					this.SendPropertyChanged("Recipients");
					this.OnRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BccRecipients", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BccRecipients
		{
			get
			{
				return this._BccRecipients;
			}
			set
			{
				if ((this._BccRecipients != value))
				{
					this.OnBccRecipientsChanging(value);
					this.SendPropertyChanging();
					this._BccRecipients = value;
					this.SendPropertyChanged("BccRecipients");
					this.OnBccRecipientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="Bit NOT NULL")]
		public bool Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this.OnSuccessChanging(value);
					this.SendPropertyChanging();
					this._Success = value;
					this.SendPropertyChanged("Success");
					this.OnSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachments", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Attachments
		{
			get
			{
				return this._Attachments;
			}
			set
			{
				if ((this._Attachments != value))
				{
					this.OnAttachmentsChanging(value);
					this.SendPropertyChanging();
					this._Attachments = value;
					this.SendPropertyChanged("Attachments");
					this.OnAttachmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NVarChar(500)")]
		public string ErrorMessage
		{
			get
			{
				return this._ErrorMessage;
			}
			set
			{
				if ((this._ErrorMessage != value))
				{
					this.OnErrorMessageChanging(value);
					this.SendPropertyChanging();
					this._ErrorMessage = value;
					this.SendPropertyChanged("ErrorMessage");
					this.OnErrorMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastSendDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastSendDate
		{
			get
			{
				return this._LastSendDate;
			}
			set
			{
				if ((this._LastSendDate != value))
				{
					this.OnLastSendDateChanging(value);
					this.SendPropertyChanging();
					this._LastSendDate = value;
					this.SendPropertyChanged("LastSendDate");
					this.OnLastSendDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
